{
  "version": 3,
  "sources": ["../../hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js", "../../react-intl/lib/src/components/createFormattedComponent.js", "../../react-intl/lib/src/components/useIntl.js", "../../react-intl/lib/src/components/injectIntl.js", "../../react-intl/lib/src/utils.js", "../../@formatjs/ecma402-abstract/lib/262.js", "../../@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js", "../../@formatjs/ecma402-abstract/lib/utils.js", "../../@formatjs/ecma402-abstract/lib/regex.generated.js", "../../@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js", "../../@formatjs/ecma402-abstract/lib/data.js", "../../@formatjs/ecma402-abstract/lib/types/date-time.js", "../../@formatjs/intl/lib/src/error.js", "../../@formatjs/intl/lib/src/utils.js", "../../@formatjs/intl/lib/src/message.js", "../../@formatjs/intl/lib/src/dateTime.js", "../../@formatjs/intl/lib/src/displayName.js", "../../@formatjs/intl/lib/src/list.js", "../../@formatjs/intl/lib/src/plural.js", "../../@formatjs/intl/lib/src/relativeTime.js", "../../@formatjs/intl/lib/src/number.js", "../../@formatjs/intl/lib/src/create-intl.js", "../../react-intl/lib/src/components/provider.js", "../../react-intl/lib/src/components/relative.js", "../../react-intl/lib/src/components/plural.js", "../../react-intl/lib/src/components/message.js", "../../react-intl/lib/src/components/dateTimeRange.js", "../../react-intl/lib/index.js"],
  "sourcesContent": ["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n", "import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) {\n    var intl = useIntl();\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport var FormattedListParts = function (props) {\n    var intl = useIntl();\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatListToParts(value, formatProps));\n};\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) {\n        var intl = useIntl();\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) {\n        var intl = useIntl();\n        var value = props.value, children = props.children, formatProps = __rest(props\n        // TODO: fix TS type definition for localeMatcher upstream\n        , [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n", "import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// This is primarily dealing with packaging systems where multiple copies of react-intl\n// might exist\nvar IntlContext = typeof window !== 'undefined' && !window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__\n    ? window.__REACT_INTL_CONTEXT__ ||\n        (window.__REACT_INTL_CONTEXT__ = React.createContext(null))\n    : React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n", "import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\nexport function shallowEqual(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n    if (!objA || !objB) {\n        return false;\n    }\n    var aKeys = Object.keys(objA);\n    var bKeys = Object.keys(objB);\n    var len = aKeys.length;\n    if (bKeys.length !== len) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        var key = aKeys[i];\n        if (objA[key] !== objB[key] ||\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n", "/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n    // Only symbol is irregular...\n    if (typeof o === 'symbol') {\n        throw TypeError('Cannot convert a Symbol value to a string');\n    }\n    return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(val) {\n    if (val === undefined) {\n        return NaN;\n    }\n    if (val === null) {\n        return +0;\n    }\n    if (typeof val === 'boolean') {\n        return val ? 1 : +0;\n    }\n    if (typeof val === 'number') {\n        return val;\n    }\n    if (typeof val === 'symbol' || typeof val === 'bigint') {\n        throw new TypeError('Cannot convert symbol/bigint to number');\n    }\n    return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n    var number = ToNumber(n);\n    if (isNaN(number) || SameValue(number, -0)) {\n        return 0;\n    }\n    if (isFinite(number)) {\n        return number;\n    }\n    var integer = Math.floor(Math.abs(number));\n    if (number < 0) {\n        integer = -integer;\n    }\n    if (SameValue(integer, -0)) {\n        return 0;\n    }\n    return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n    if (!isFinite(time)) {\n        return NaN;\n    }\n    if (Math.abs(time) > 8.64 * 1e15) {\n        return NaN;\n    }\n    return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n    if (arg == null) {\n        throw new TypeError('undefined/null cannot be converted to object');\n    }\n    return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n    if (Object.is) {\n        return Object.is(x, y);\n    }\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return x !== 0 || 1 / x === 1 / y;\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n    return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n    return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n    if (x === null) {\n        return 'Null';\n    }\n    if (typeof x === 'undefined') {\n        return 'Undefined';\n    }\n    if (typeof x === 'function' || typeof x === 'object') {\n        return 'Object';\n    }\n    if (typeof x === 'number') {\n        return 'Number';\n    }\n    if (typeof x === 'boolean') {\n        return 'Boolean';\n    }\n    if (typeof x === 'string') {\n        return 'String';\n    }\n    if (typeof x === 'symbol') {\n        return 'Symbol';\n    }\n    if (typeof x === 'bigint') {\n        return 'BigInt';\n    }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n    return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n    return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n    return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n    return Date.UTC(y, 0) / MS_PER_DAY;\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n    return Date.UTC(y, 0);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n    return new Date(t).getUTCFullYear();\n}\nexport function DaysInYear(y) {\n    if (y % 4 !== 0) {\n        return 365;\n    }\n    if (y % 100 !== 0) {\n        return 366;\n    }\n    if (y % 400 !== 0) {\n        return 365;\n    }\n    return 366;\n}\nexport function DayWithinYear(t) {\n    return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n    return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var leap = InLeapYear(t);\n    if (dwy >= 0 && dwy < 31) {\n        return 0;\n    }\n    if (dwy < 59 + leap) {\n        return 1;\n    }\n    if (dwy < 90 + leap) {\n        return 2;\n    }\n    if (dwy < 120 + leap) {\n        return 3;\n    }\n    if (dwy < 151 + leap) {\n        return 4;\n    }\n    if (dwy < 181 + leap) {\n        return 5;\n    }\n    if (dwy < 212 + leap) {\n        return 6;\n    }\n    if (dwy < 243 + leap) {\n        return 7;\n    }\n    if (dwy < 273 + leap) {\n        return 8;\n    }\n    if (dwy < 304 + leap) {\n        return 9;\n    }\n    if (dwy < 334 + leap) {\n        return 10;\n    }\n    if (dwy < 365 + leap) {\n        return 11;\n    }\n    throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n    var dwy = DayWithinYear(t);\n    var mft = MonthFromTime(t);\n    var leap = InLeapYear(t);\n    if (mft === 0) {\n        return dwy + 1;\n    }\n    if (mft === 1) {\n        return dwy - 30;\n    }\n    if (mft === 2) {\n        return dwy - 58 - leap;\n    }\n    if (mft === 3) {\n        return dwy - 89 - leap;\n    }\n    if (mft === 4) {\n        return dwy - 119 - leap;\n    }\n    if (mft === 5) {\n        return dwy - 150 - leap;\n    }\n    if (mft === 6) {\n        return dwy - 180 - leap;\n    }\n    if (mft === 7) {\n        return dwy - 211 - leap;\n    }\n    if (mft === 8) {\n        return dwy - 242 - leap;\n    }\n    if (mft === 9) {\n        return dwy - 272 - leap;\n    }\n    if (mft === 10) {\n        return dwy - 303 - leap;\n    }\n    if (mft === 11) {\n        return dwy - 333 - leap;\n    }\n    throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n    return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n    return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n    return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\nfunction IsCallable(fn) {\n    return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n    if (!IsCallable(C)) {\n        return false;\n    }\n    if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n        var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n        return O instanceof BC;\n    }\n    if (typeof O !== 'object') {\n        return false;\n    }\n    var P = C.prototype;\n    if (typeof P !== 'object') {\n        throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n    }\n    return Object.prototype.isPrototypeOf.call(P, O);\n}\nexport function msFromTime(t) {\n    return mod(t, MS_PER_SECOND);\n}\n", "/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = [\n    'angle-degree',\n    'area-acre',\n    'area-hectare',\n    'concentr-percent',\n    'digital-bit',\n    'digital-byte',\n    'digital-gigabit',\n    'digital-gigabyte',\n    'digital-kilobit',\n    'digital-kilobyte',\n    'digital-megabit',\n    'digital-megabyte',\n    'digital-petabyte',\n    'digital-terabit',\n    'digital-terabyte',\n    'duration-day',\n    'duration-hour',\n    'duration-millisecond',\n    'duration-minute',\n    'duration-month',\n    'duration-second',\n    'duration-week',\n    'duration-year',\n    'length-centimeter',\n    'length-foot',\n    'length-inch',\n    'length-kilometer',\n    'length-meter',\n    'length-mile-scandinavian',\n    'length-mile',\n    'length-millimeter',\n    'length-yard',\n    'mass-gram',\n    'mass-kilogram',\n    'mass-ounce',\n    'mass-pound',\n    'mass-stone',\n    'temperature-celsius',\n    'temperature-fahrenheit',\n    'volume-fluid-ounce',\n    'volume-gallon',\n    'volume-liter',\n    'volume-milliliter',\n];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n    return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n    return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}\n", "/**\n * Cannot do Math.log(x) / Math.log(10) bc if IEEE floating point issue\n * @param x number\n */\nexport function getMagnitude(x) {\n    // Cannot count string length via Number.toString because it may use scientific notation\n    // for very small or very large numbers.\n    return Math.floor(Math.log(x) * Math.LOG10E);\n}\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\nexport function setInternalSlot(map, pl, field, value) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    slots[field] = value;\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n        var k = _a[_i];\n        setInternalSlot(map, pl, k, props[k]);\n    }\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(\"\".concat(pl, \" InternalSlot has not been initialized\"));\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, Object.create(null));\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\n/*\n  17 ECMAScript Standard Built-in Objects:\n    Every built-in Function object, including constructors, that is not\n    identified as an anonymous function has a name property whose value\n    is a String.\n\n    Unless otherwise specified, the name property of a built-in Function\n    object, if it exists, has the attributes { [[Writable]]: false,\n    [[Enumerable]]: false, [[Configurable]]: true }.\n*/\nexport function defineProperty(target, name, _a) {\n    var value = _a.value;\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value,\n    });\n}\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n", "// @generated from regex-gen.ts\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;\n", "import { ToRawFixed } from './ToRawFixed';\nimport { digitMapping } from './digit-mapping.generated';\nimport { S_UNICODE_REGEX } from '../regex.generated';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n    var sign = numberResult.sign, exponent = numberResult.exponent, magnitude = numberResult.magnitude;\n    var notation = options.notation, style = options.style, numberingSystem = options.numberingSystem;\n    var defaultNumberingSystem = data.numbers.nu[0];\n    // #region Part 1: partition and interpolate the CLDR number pattern.\n    // ----------------------------------------------------------\n    var compactNumberPattern = null;\n    if (notation === 'compact' && magnitude) {\n        compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n    }\n    // This is used multiple times\n    var nonNameCurrencyPart;\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var byCurrencyDisplay = data.currencies[options.currency];\n        if (byCurrencyDisplay) {\n            switch (options.currencyDisplay) {\n                case 'code':\n                    nonNameCurrencyPart = options.currency;\n                    break;\n                case 'symbol':\n                    nonNameCurrencyPart = byCurrencyDisplay.symbol;\n                    break;\n                default:\n                    nonNameCurrencyPart = byCurrencyDisplay.narrow;\n                    break;\n            }\n        }\n        else {\n            // Fallback for unknown currency\n            nonNameCurrencyPart = options.currency;\n        }\n    }\n    var numberPattern;\n    if (!compactNumberPattern) {\n        // Note: if the style is unit, or is currency and the currency display is name,\n        // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n        if (style === 'decimal' ||\n            style === 'unit' ||\n            (style === 'currency' && options.currencyDisplay === 'name')) {\n            // Shortcut for decimal\n            var decimalData = data.numbers.decimal[numberingSystem] ||\n                data.numbers.decimal[defaultNumberingSystem];\n            numberPattern = getPatternForSign(decimalData.standard, sign);\n        }\n        else if (style === 'currency') {\n            var currencyData = data.numbers.currency[numberingSystem] ||\n                data.numbers.currency[defaultNumberingSystem];\n            // We replace number pattern part with `0` for easier postprocessing.\n            numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n        }\n        else {\n            // percent\n            var percentPattern = data.numbers.percent[numberingSystem] ||\n                data.numbers.percent[defaultNumberingSystem];\n            numberPattern = getPatternForSign(percentPattern, sign);\n        }\n    }\n    else {\n        numberPattern = compactNumberPattern;\n    }\n    // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n    // used to infer decimal group sizes.\n    var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n    // Now we start to substitute patterns\n    // 1. replace strings like `0` and `#,##0.00` with `{0}`\n    // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n    numberPattern = numberPattern\n        .replace(CLDR_NUMBER_PATTERN, '{0}')\n        .replace(/'(.)'/g, '$1');\n    // Handle currency spacing (both compact and non-compact).\n    if (style === 'currency' && options.currencyDisplay !== 'name') {\n        var currencyData = data.numbers.currency[numberingSystem] ||\n            data.numbers.currency[defaultNumberingSystem];\n        // See `currencySpacing` substitution rule in TR-35.\n        // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n        //\n        // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n        // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n        // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n        //\n        // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n        // and number, because `$` does not match \"[:^S:]\".\n        //\n        // Implementation note: here we do the best effort to infer the insertion.\n        // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n        var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n        if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\n        }\n        var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n        if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n            numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\n        }\n    }\n    // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n    var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n    var numberParts = [];\n    var symbols = data.numbers.symbols[numberingSystem] ||\n        data.numbers.symbols[defaultNumberingSystem];\n    for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n        var part = numberPatternParts_1[_i];\n        if (!part) {\n            continue;\n        }\n        switch (part) {\n            case '{0}': {\n                // We only need to handle scientific and engineering notation here.\n                numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, \n                // If compact number pattern exists, do not insert group separators.\n                !compactNumberPattern && Boolean(options.useGrouping), decimalNumberPattern));\n                break;\n            }\n            case '-':\n                numberParts.push({ type: 'minusSign', value: symbols.minusSign });\n                break;\n            case '+':\n                numberParts.push({ type: 'plusSign', value: symbols.plusSign });\n                break;\n            case '%':\n                numberParts.push({ type: 'percentSign', value: symbols.percentSign });\n                break;\n            case '¤':\n                // Computed above when handling currency spacing.\n                numberParts.push({ type: 'currency', value: nonNameCurrencyPart });\n                break;\n            default:\n                if (/^\\{c:/.test(part)) {\n                    numberParts.push({\n                        type: 'compact',\n                        value: part.substring(3, part.length - 1),\n                    });\n                }\n                else {\n                    // literal\n                    numberParts.push({ type: 'literal', value: part });\n                }\n                break;\n        }\n    }\n    // #endregion\n    // #region Part 2: interpolate unit pattern if necessary.\n    // ----------------------------------------------\n    switch (style) {\n        case 'currency': {\n            // `currencyDisplay: 'name'` has similar pattern handling as units.\n            if (options.currencyDisplay === 'name') {\n                var unitPattern = (data.numbers.currency[numberingSystem] ||\n                    data.numbers.currency[defaultNumberingSystem]).unitPattern;\n                // Select plural\n                var unitName = void 0;\n                var currencyNameData = data.currencies[options.currency];\n                if (currencyNameData) {\n                    unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n                }\n                else {\n                    // Fallback for unknown currency\n                    unitName = options.currency;\n                }\n                // Do {0} and {1} substitution\n                var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n                var result = [];\n                for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n                    var part = unitPatternParts_1[_a];\n                    switch (part) {\n                        case '{0}':\n                            result.push.apply(result, numberParts);\n                            break;\n                        case '{1}':\n                            result.push({ type: 'currency', value: unitName });\n                            break;\n                        default:\n                            if (part) {\n                                result.push({ type: 'literal', value: part });\n                            }\n                            break;\n                    }\n                }\n                return result;\n            }\n            else {\n                return numberParts;\n            }\n        }\n        case 'unit': {\n            var unit = options.unit, unitDisplay = options.unitDisplay;\n            var unitData = data.units.simple[unit];\n            var unitPattern = void 0;\n            if (unitData) {\n                // Simple unit pattern\n                unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n            }\n            else {\n                // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n                // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n                // Implementation note: we are not following TR-35 here because we need to format to parts!\n                var _b = unit.split('-per-'), numeratorUnit = _b[0], denominatorUnit = _b[1];\n                unitData = data.units.simple[numeratorUnit];\n                var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n                var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n                if (perUnitPattern) {\n                    // perUnitPattern exists, combine it with numeratorUnitPattern\n                    unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n                }\n                else {\n                    // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n                    // the denominator pattern in singular form.\n                    var perPattern = data.units.compound.per[unitDisplay];\n                    var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n                    unitPattern = unitPattern = perPattern\n                        .replace('{0}', numeratorUnitPattern)\n                        .replace('{1}', denominatorPattern.replace('{0}', ''));\n                }\n            }\n            var result = [];\n            // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n            for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n                var part = _d[_c];\n                var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n                if (interpolateMatch) {\n                    // Space before \"{0}\"\n                    if (interpolateMatch[1]) {\n                        result.push({ type: 'literal', value: interpolateMatch[1] });\n                    }\n                    // \"{0}\" itself\n                    result.push.apply(result, numberParts);\n                    // Space after \"{0}\"\n                    if (interpolateMatch[2]) {\n                        result.push({ type: 'literal', value: interpolateMatch[2] });\n                    }\n                }\n                else if (part) {\n                    result.push({ type: 'unit', value: part });\n                }\n            }\n            return result;\n        }\n        default:\n            return numberParts;\n    }\n    // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping, \n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n    var result = [];\n    // eslint-disable-next-line prefer-const\n    var n = numberResult.formattedString, x = numberResult.roundedNumber;\n    if (isNaN(x)) {\n        return [{ type: 'nan', value: n }];\n    }\n    else if (!isFinite(x)) {\n        return [{ type: 'infinity', value: n }];\n    }\n    var digitReplacementTable = digitMapping[numberingSystem];\n    if (digitReplacementTable) {\n        n = n.replace(/\\d/g, function (digit) { return digitReplacementTable[+digit] || digit; });\n    }\n    // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n    // representation of n in the given numbering system.\n    var decimalSepIndex = n.indexOf('.');\n    var integer;\n    var fraction;\n    if (decimalSepIndex > 0) {\n        integer = n.slice(0, decimalSepIndex);\n        fraction = n.slice(decimalSepIndex + 1);\n    }\n    else {\n        integer = n;\n    }\n    // #region Grouping integer digits\n    // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n    // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n    // unless the rounded number is greater than 10000:\n    //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n    //   NumberFormat('de').format(1234) //=> \"1.234\"\n    if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n        var groupSepSymbol = symbols.group;\n        var groups = [];\n        // > There may be two different grouping sizes: The primary grouping size used for the least\n        // > significant integer group, and the secondary grouping size used for more significant groups.\n        // > If a pattern contains multiple grouping separators, the interval between the last one and the\n        // > end of the integer defines the primary grouping size, and the interval between the last two\n        // > defines the secondary grouping size. All others are ignored.\n        var integerNumberPattern = decimalNumberPattern.split('.')[0];\n        var patternGroups = integerNumberPattern.split(',');\n        var primaryGroupingSize = 3;\n        var secondaryGroupingSize = 3;\n        if (patternGroups.length > 1) {\n            primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n        }\n        if (patternGroups.length > 2) {\n            secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n        }\n        var i = integer.length - primaryGroupingSize;\n        if (i > 0) {\n            // Slice the least significant integer group\n            groups.push(integer.slice(i, i + primaryGroupingSize));\n            // Then iteratively push the more signicant groups\n            // TODO: handle surrogate pairs in some numbering system digits\n            for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n                groups.push(integer.slice(i, i + secondaryGroupingSize));\n            }\n            groups.push(integer.slice(0, i + secondaryGroupingSize));\n        }\n        else {\n            groups.push(integer);\n        }\n        while (groups.length > 0) {\n            var integerGroup = groups.pop();\n            result.push({ type: 'integer', value: integerGroup });\n            if (groups.length > 0) {\n                result.push({ type: 'group', value: groupSepSymbol });\n            }\n        }\n    }\n    else {\n        result.push({ type: 'integer', value: integer });\n    }\n    // #endregion\n    if (fraction !== undefined) {\n        result.push({ type: 'decimal', value: symbols.decimal }, { type: 'fraction', value: fraction });\n    }\n    if ((notation === 'scientific' || notation === 'engineering') &&\n        isFinite(x)) {\n        result.push({ type: 'exponentSeparator', value: symbols.exponential });\n        if (exponent < 0) {\n            result.push({ type: 'exponentMinusSign', value: symbols.minusSign });\n            exponent = -exponent;\n        }\n        var exponentResult = ToRawFixed(exponent, 0, 0);\n        result.push({\n            type: 'exponentInteger',\n            value: exponentResult.formattedString,\n        });\n    }\n    return result;\n}\nfunction getPatternForSign(pattern, sign) {\n    if (pattern.indexOf(';') < 0) {\n        pattern = \"\".concat(pattern, \";-\").concat(pattern);\n    }\n    var _a = pattern.split(';'), zeroPattern = _a[0], negativePattern = _a[1];\n    switch (sign) {\n        case 0:\n            return zeroPattern;\n        case -1:\n            return negativePattern;\n        default:\n            return negativePattern.indexOf('-') >= 0\n                ? negativePattern.replace(/-/g, '+')\n                : \"+\".concat(zeroPattern);\n    }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n    var _a;\n    var roundedNumber = numberResult.roundedNumber, sign = numberResult.sign, magnitude = numberResult.magnitude;\n    var magnitudeKey = String(Math.pow(10, magnitude));\n    var defaultNumberingSystem = data.numbers.nu[0];\n    var pattern;\n    if (style === 'currency' && currencyDisplay !== 'name') {\n        var byNumberingSystem = data.numbers.currency;\n        var currencyData = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        // NOTE: compact notation ignores currencySign!\n        var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n        if (!compactPluralRules) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n    }\n    else {\n        var byNumberingSystem = data.numbers.decimal;\n        var byCompactDisplay = byNumberingSystem[numberingSystem] ||\n            byNumberingSystem[defaultNumberingSystem];\n        var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n        if (!compactPlaralRule) {\n            return null;\n        }\n        pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n    }\n    // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n    // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n    // > pattern for that sort of object is supplied.\n    if (pattern === '0') {\n        return null;\n    }\n    pattern = getPatternForSign(pattern, sign)\n        // Extract compact literal from the pattern\n        .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n        // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n        .replace(/0+/, '0');\n    return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n    return rules[pl.select(x)] || rules.other;\n}\n", "import { __extends } from \"tslib\";\nvar MissingLocaleDataError = /** @class */ (function (_super) {\n    __extends(MissingLocaleDataError, _super);\n    function MissingLocaleDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.type = 'MISSING_LOCALE_DATA';\n        return _this;\n    }\n    return MissingLocaleDataError;\n}(Error));\nexport function isMissingLocaleDataError(e) {\n    return e.type === 'MISSING_LOCALE_DATA';\n}\n", "export var RangePatternType;\n(function (RangePatternType) {\n    RangePatternType[\"startRange\"] = \"startRange\";\n    RangePatternType[\"shared\"] = \"shared\";\n    RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));\n", "import { __extends } from \"tslib\";\nexport var IntlErrorCode;\n(function (IntlErrorCode) {\n    IntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    IntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    IntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    IntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    IntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(IntlErrorCode || (IntlErrorCode = {}));\nvar IntlError = /** @class */ (function (_super) {\n    __extends(IntlError, _super);\n    function IntlError(code, message, exception) {\n        var _this = this;\n        var err = exception\n            ? exception instanceof Error\n                ? exception\n                : new Error(String(exception))\n            : undefined;\n        _this = _super.call(this, \"[@formatjs/intl Error \".concat(code, \"] \").concat(message, \"\\n\").concat(err ? \"\\n\".concat(err.message, \"\\n\").concat(err.stack) : '')) || this;\n        _this.code = code;\n        // @ts-ignore just so we don't need to declare dep on @types/node\n        if (typeof Error.captureStackTrace === 'function') {\n            // @ts-ignore just so we don't need to declare dep on @types/node\n            Error.captureStackTrace(_this, IntlError);\n        }\n        return _this;\n    }\n    return IntlError;\n}(Error));\nexport { IntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, IntlErrorCode.UNSUPPORTED_FORMATTER, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(IntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, IntlErrorCode.INVALID_CONFIG, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(IntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, IntlErrorCode.MISSING_DATA, message, exception) || this;\n    }\n    return MissingDataError;\n}(IntlError));\nexport { MissingDataError };\nvar IntlFormatError = /** @class */ (function (_super) {\n    __extends(IntlFormatError, _super);\n    function IntlFormatError(message, locale, exception) {\n        var _this = _super.call(this, IntlErrorCode.FORMAT_ERROR, \"\".concat(message, \"\\nLocale: \").concat(locale, \"\\n\"), exception) || this;\n        _this.locale = locale;\n        return _this;\n    }\n    return IntlFormatError;\n}(IntlError));\nexport { IntlFormatError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"\".concat(message, \"\\nMessageID: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.id, \"\\nDefault Message: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage, \"\\nDescription: \").concat(descriptor === null || descriptor === void 0 ? void 0 : descriptor.description, \"\\n\"), locale, exception) || this;\n        _this.descriptor = descriptor;\n        _this.locale = locale;\n        return _this;\n    }\n    return MessageFormatError;\n}(IntlFormatError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, IntlErrorCode.MISSING_TRANSLATION, \"Missing message: \\\"\".concat(descriptor.id, \"\\\" for locale \\\"\").concat(locale, \"\\\", using \").concat(descriptor.defaultMessage\n            ? \"default message (\".concat(typeof descriptor.defaultMessage === 'string'\n                ? descriptor.defaultMessage\n                : descriptor.defaultMessage\n                    .map(function (e) { var _a; return (_a = e.value) !== null && _a !== void 0 ? _a : JSON.stringify(e); })\n                    .join(), \")\")\n            : 'id', \" as fallback.\")) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(IntlError));\nexport { MissingTranslationError };\n", "import { __assign, __spreadArray } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport { memoize, strategies } from '@formatjs/fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, allowlist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return allowlist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nvar defaultWarnHandler = function (warning) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn(warning);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    fallbackOnEmptyString: true,\n    onError: defaultErrorHandler,\n    onWarn: defaultWarnHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: strategies.variadic,\n    });\n    var getNumberFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: strategies.variadic,\n    });\n    var getPluralRules = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: strategies.variadic,\n        }),\n        getDisplayNames: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \".concat(type, \" format named: \").concat(name)));\n}\n", "import { __assign } from \"tslib\";\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { IntlMessageFormat, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from './error';\nimport { TYPE } from '@formatjs/icu-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport var formatMessage = function (_a, state, messageDescriptor, values, opts) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, fallbackOnEmptyString = _a.fallbackOnEmptyString, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, \"[@formatjs/intl] An `id` must be provided to format a message. You can either:\\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\\nto autofix this issue\");\n    var id = String(msgId);\n    var message = \n    // In case messages is Object.create(null)\n    // e.g import('foo.json') from webpack)\n    // See https://github.com/formatjs/formatjs/issues/1914\n    messages &&\n        Object.prototype.hasOwnProperty.call(messages, id) &&\n        messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        !defaultRichTextElements) {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    values = __assign(__assign({}, defaultRichTextElements), (values || {}));\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (fallbackOnEmptyString === false && message === '') {\n            return message;\n        }\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n                return formatter.format(values);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\".concat(id, \"\\\", rendering default message verbatim\"), locale, messageDescriptor, e));\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, __assign({ formatters: state }, (opts || {})));\n        return formatter.format(values);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\".concat(id, \"\\\", using \").concat(defaultMessage ? 'default message' : 'id', \" as fallback.\"), locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats, opts);\n            return formatter.format(values);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\".concat(id, \"\\\", rendering message verbatim\"), locale, messageDescriptor, e));\n        }\n    }\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof defaultMessage === 'string') {\n        return defaultMessage;\n    }\n    return id;\n};\n", "import { __assign } from \"tslib\";\nimport { filterProps, getNamedFormat } from './utils';\nimport { IntlFormatError } from './error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n    'fractionalSecondDigits',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second &&\n        !filteredOptions.timeStyle &&\n        !filteredOptions.dateStyle) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return String(date);\n}\nexport function formatDateTimeRange(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var from = _a[0], to = _a[1], _b = _a[2], options = _b === void 0 ? {} : _b;\n    var timeZone = config.timeZone, locale = config.locale, onError = config.onError;\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, timeZone ? { timeZone: timeZone } : {});\n    try {\n        return getDateTimeFormat(locale, filteredOptions).formatRange(from, to);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting date time range.', config.locale, e));\n    }\n    return String(from);\n}\nexport function formatDateToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting date.', config.locale, e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat) {\n    var _a = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        _a[_i - 2] = arguments[_i];\n    }\n    var value = _a[0], _b = _a[1], options = _b === void 0 ? {} : _b;\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date); // TODO: remove this when https://github.com/microsoft/TypeScript/pull/50402 is merged\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting time.', config.locale, e));\n    }\n    return [];\n}\n", "import { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar DISPLAY_NAMES_OPTONS = [\n    'style',\n    'type',\n    'fallback',\n    'languageDisplay',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting display name.', locale, e));\n    }\n}\n", "import { __assign } from \"tslib\";\nimport { filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar LIST_FORMAT_OPTIONS = [\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return \"\".concat(now, \"_\").concat(i, \"_\").concat(now);\n}\nexport function formatList(opts, getListFormat, values, options) {\n    if (options === void 0) { options = {}; }\n    var results = formatListToParts(opts, getListFormat, values, options).reduce(function (all, el) {\n        var val = el.value;\n        if (typeof val !== 'string') {\n            all.push(val);\n        }\n        else if (typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += val;\n        }\n        else {\n            all.push(val);\n        }\n        return all;\n    }, []);\n    return results.length === 1 ? results[0] : results.length === 0 ? '' : results;\n}\nexport function formatListToParts(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        return getListFormat(locale, filteredOptions)\n            .formatToParts(serializedValues)\n            .map(function (part) {\n            return part.type === 'literal'\n                ? part\n                : __assign(__assign({}, part), { value: richValues_1[part.value] || part.value });\n        });\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting list.', locale, e));\n    }\n    // @ts-ignore\n    return values;\n}\n", "import { filterProps } from './utils';\nimport { IntlFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting plural.', locale, e));\n    }\n    return 'other';\n}\n", "import { getNamedFormat, filterProps } from './utils';\nimport { FormatError, ErrorCode } from 'intl-messageformat';\nimport { IntlFormatError } from './error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting relative time.', config.locale, e));\n    }\n    return String(value);\n}\n", "import { getNamedFormat, filterProps } from './utils';\nimport { IntlFormatError } from './error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'numberingSystem',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new IntlFormatError('Error formatting number.', config.locale, e));\n    }\n    return [];\n}\n", "import { __assign } from \"tslib\";\nimport { createFormatters, DEFAULT_INTL_CONFIG } from './utils';\nimport { InvalidConfigError, MissingDataError } from './error';\nimport { formatNumber, formatNumberToParts } from './number';\nimport { formatRelativeTime } from './relativeTime';\nimport { formatDate, formatDateToParts, formatTime, formatTimeToParts, formatDateTimeRange, } from './dateTime';\nimport { formatPlural } from './plural';\nimport { formatMessage } from './message';\nimport { formatList, formatListToParts } from './list';\nimport { formatDisplayName } from './displayName';\nfunction messagesContainString(messages) {\n    var firstMessage = messages ? messages[Object.keys(messages)[0]] : undefined;\n    return typeof firstMessage === 'string';\n}\nfunction verifyConfigMessages(config) {\n    if (config.onWarn &&\n        config.defaultRichTextElements &&\n        messagesContainString(config.messages || {})) {\n        config.onWarn(\"[@formatjs/intl] \\\"defaultRichTextElements\\\" was specified but \\\"message\\\" was not pre-compiled. \\nPlease consider using \\\"@formatjs/cli\\\" to pre-compile your messages for performance.\\nFor more details see https://formatjs.io/docs/getting-started/message-distribution\");\n    }\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\".concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\")));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.NumberFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\".concat(locale, \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\").concat(defaultLocale, \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\")));\n    }\n    verifyConfigMessages(resolvedConfig);\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateTimeRange: formatDateTimeRange.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), \n        // @ts-expect-error TODO: will get to this later\n        formatMessage: formatMessage.bind(null, resolvedConfig, formatters), \n        // @ts-expect-error TODO: will get to this later\n        $t: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatListToParts: formatListToParts.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\n", "/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual, } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    if (!values) {\n        return values;\n    }\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n    var rest = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        rest[_i - 4] = arguments[_i];\n    }\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\n        formatters,\n        descriptor,\n        values], rest, false));\n    if (Array.isArray(chunks)) {\n        return React.Children.toArray(chunks);\n    }\n    return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\n    var resolvedConfig = {\n        locale: coreIntl.locale,\n        timeZone: coreIntl.timeZone,\n        fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n        formats: coreIntl.formats,\n        defaultLocale: coreIntl.defaultLocale,\n        defaultFormats: coreIntl.defaultFormats,\n        messages: coreIntl.messages,\n        onError: coreIntl.onError,\n        defaultRichTextElements: defaultRichTextElements,\n    };\n    return __assign(__assign({}, coreIntl), { \n        // @ts-expect-error fix this\n        formatMessage: formatMessage.bind(null, resolvedConfig, coreIntl.formatters), \n        // @ts-expect-error fix this\n        $t: formatMessage.bind(null, resolvedConfig, coreIntl.formatters) });\n};\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEqual(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n", "import { __assign, __rest } from \"tslib\";\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { invariant, } from '@formatjs/ecma402-abstract';\nimport useIntl from './useIntl';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    var absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nvar INCREMENTABLE_UNITS = [\n    'second',\n    'minute',\n    'hour',\n];\nfunction canIncrement(unit) {\n    if (unit === void 0) { unit = 'second'; }\n    return INCREMENTABLE_UNITS.indexOf(unit) > -1;\n}\nvar SimpleFormattedRelativeTime = function (props) {\n    var _a = useIntl(), formatRelativeTime = _a.formatRelativeTime, Text = _a.textComponent;\n    var children = props.children, value = props.value, unit = props.unit, otherProps = __rest(props, [\"children\", \"value\", \"unit\"]);\n    var formattedRelativeTime = formatRelativeTime(value || 0, unit, otherProps);\n    if (typeof children === 'function') {\n        return children(formattedRelativeTime);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedRelativeTime);\n    }\n    return React.createElement(React.Fragment, null, formattedRelativeTime);\n};\nvar FormattedRelativeTime = function (_a) {\n    var value = _a.value, unit = _a.unit, updateIntervalInSeconds = _a.updateIntervalInSeconds, otherProps = __rest(_a, [\"value\", \"unit\", \"updateIntervalInSeconds\"]);\n    invariant(!updateIntervalInSeconds ||\n        !!(updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n    var _b = React.useState(), prevUnit = _b[0], setPrevUnit = _b[1];\n    var _c = React.useState(0), prevValue = _c[0], setPrevValue = _c[1];\n    var _d = React.useState(0), currentValueInSeconds = _d[0], setCurrentValueInSeconds = _d[1];\n    var updateTimer;\n    if (unit !== prevUnit || value !== prevValue) {\n        setPrevValue(value || 0);\n        setPrevUnit(unit);\n        setCurrentValueInSeconds(canIncrement(unit) ? valueToSeconds(value, unit) : 0);\n    }\n    React.useEffect(function () {\n        function clearUpdateTimer() {\n            clearTimeout(updateTimer);\n        }\n        clearUpdateTimer();\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return clearUpdateTimer;\n        }\n        // Figure out the next interesting time\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        var nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return clearUpdateTimer;\n        }\n        var unitDuration = getDurationInSeconds(nextUnit);\n        var remainder = nextValueInSeconds % unitDuration;\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        if (currentValueInSeconds !== nextInterestingValueInSeconds) {\n            updateTimer = setTimeout(function () { return setCurrentValueInSeconds(nextInterestingValueInSeconds); }, delayInSeconds * 1e3);\n        }\n        return clearUpdateTimer;\n    }, [currentValueInSeconds, updateIntervalInSeconds, unit]);\n    var currentValue = value || 0;\n    var currentUnit = unit;\n    if (canIncrement(unit) &&\n        typeof currentValueInSeconds === 'number' &&\n        updateIntervalInSeconds) {\n        currentUnit = selectUnit(currentValueInSeconds);\n        var unitDuration = getDurationInSeconds(currentUnit);\n        currentValue = Math.round(currentValueInSeconds / unitDuration);\n    }\n    return (React.createElement(SimpleFormattedRelativeTime, __assign({ value: currentValue, unit: currentUnit }, otherProps)));\n};\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\nFormattedRelativeTime.defaultProps = {\n    value: 0,\n    unit: 'second',\n};\nexport default FormattedRelativeTime;\n", "/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar FormattedPlural = function (props) {\n    var _a = useIntl(), formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var value = props.value, other = props.other, children = props.children;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default FormattedPlural;\n", "/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n", "import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar FormattedDateTimeRange = function (props) {\n    var intl = useIntl();\n    var from = props.from, to = props.to, children = props.children, formatProps = __rest(props, [\"from\", \"to\", \"children\"]);\n    var formattedValue = intl.formatDateTimeRange(from, to, formatProps);\n    if (typeof children === 'function') {\n        return children(formattedValue);\n    }\n    var Text = intl.textComponent || React.Fragment;\n    return React.createElement(Text, null, formattedValue);\n};\nFormattedDateTimeRange.displayName = 'FormattedDateTimeRange';\nexport default FormattedDateTimeRange;\n", "import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nimport injectIntl, { Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nimport useIntl from './src/components/useIntl';\nimport IntlProvider, { createIntl } from './src/components/provider';\nimport FormattedRelativeTime from './src/components/relative';\nimport FormattedPlural from './src/components/plural';\nimport FormattedMessage from './src/components/message';\nimport FormattedDateTimeRange from './src/components/dateTimeRange';\nexport { FormattedDateTimeRange, FormattedMessage, FormattedPlural, FormattedRelativeTime, IntlContext, IntlProvider, RawIntlProvider, createIntl, injectIntl, useIntl, };\nexport { createIntlCache, UnsupportedFormatterError, InvalidConfigError, MissingDataError, MessageFormatError, MissingTranslationError, IntlErrorCode as ReactIntlErrorCode, IntlError as ReactIntlError, } from '@formatjs/intl';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts, FormattedListParts, } from './src/components/createFormattedComponent';\n"],
  "mappings": "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",
  "names": ["defineProperty", "hoistNonReactStatics", "React", "React", "React", "MissingLocaleDataError", "RangePatternType", "IntlErrorCode", "IntlError", "UnsupportedFormatterError", "InvalidConfigError", "MissingDataError", "IntlFormatError", "MessageFormatError", "MissingTranslationError", "getFormatter", "getFormatter", "DEFAULT_INTL_CONFIG", "forwardRef", "_a", "hoistNonReactStatics", "DisplayName", "DisplayNameParts", "React", "formatMessage", "createIntl", "DEFAULT_INTL_CONFIG", "IntlProvider", "React", "formatRelativeTime", "unitDuration", "React", "formatPlural", "React", "formatMessage", "React"]
}
